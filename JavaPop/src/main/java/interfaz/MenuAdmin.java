/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import static clases.utils.Colecciones.*;
import clases.*;
import clases.utils.IOCustomLib;

import javax.swing.ImageIcon;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author luism
 */
public class MenuAdmin extends javax.swing.JFrame {

    private CardLayout camposCL;
    private Cliente user;
    private ArrayList<Producto> prodDefinitivo;
    public int posicionMin;
    private int posicionMax;
    private ArrayList<Cliente> clientDefinitivo;
    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de imagen (*.jpg, *.jpeg, *.png, *.gif)", "jpg", "png", "jpeg", "gif");
    private String imageAddress;
    private MenuPrincipal menu;

    /**
     * Creates new form MenuPrincipal1
     */
    public MenuAdmin() {
        initComponents();

        // setup icon
        ImageIcon img = new ImageIcon(".\\resources\\logo\\IconoJavaPop2.png");
        super.setIconImage(img.getImage());
        //this.clienteDefinitivo = ;

        // Guardamos el CardLayout como atributo de la clase para acceder facilmente
        this.camposCL = (CardLayout) this.jPanel1.getLayout();

        camposCL.show(jPanel1, "cardBienvenida");

        super.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        Buscar = new javax.swing.JLabel();
        claveBusqueda = new javax.swing.JTextField();
        categoriaBannerLabel = new javax.swing.JLabel();
        comboBoxCategoria = new javax.swing.JComboBox<>();
        busquedaButton = new javax.swing.JButton();
        Funcion = new javax.swing.JLabel();
        comboBoxFuncion = new javax.swing.JComboBox<>();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(80, 80), new java.awt.Dimension(80, 30), new java.awt.Dimension(80, 80));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(80, 100), new java.awt.Dimension(60, 100), new java.awt.Dimension(80, 100));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(80, 100), new java.awt.Dimension(60, 100), new java.awt.Dimension(80, 100));
        jPanel1 = new javax.swing.JPanel();
        panelUsuarios = new javax.swing.JPanel();
        usuarioMin1 = new interfaz.panels.UsuarioMin();
        usuarioMin2 = new interfaz.panels.UsuarioMin();
        usuarioMin3 = new interfaz.panels.UsuarioMin();
        usuarioMin4 = new interfaz.panels.UsuarioMin();
        usuarioMin5 = new interfaz.panels.UsuarioMin();
        usuarioMin6 = new interfaz.panels.UsuarioMin();
        usuarioMin7 = new interfaz.panels.UsuarioMin();
        usuarioMin8 = new interfaz.panels.UsuarioMin();
        panelProductos = new javax.swing.JPanel();
        productoMin1 = new interfaz.panels.ProductoMin();
        productoMin2 = new interfaz.panels.ProductoMin();
        productoMin3 = new interfaz.panels.ProductoMin();
        productoMin4 = new interfaz.panels.ProductoMin();
        productoMin5 = new interfaz.panels.ProductoMin();
        productoMin6 = new interfaz.panels.ProductoMin();
        productoMin7 = new interfaz.panels.ProductoMin();
        productoMin8 = new interfaz.panels.ProductoMin();
        rePag = new javax.swing.JButton();
        etiquetaPagina = new javax.swing.JLabel();
        avPag = new javax.swing.JButton();
        panelVentas = new javax.swing.JPanel();
        ventaMin1 = new interfaz.panels.VentaMin();
        ventaMin2 = new interfaz.panels.VentaMin();
        ventaMin3 = new interfaz.panels.VentaMin();
        ventaMin4 = new interfaz.panels.VentaMin();
        ventaMin5 = new interfaz.panels.VentaMin();
        ventaMin6 = new interfaz.panels.VentaMin();
        ventaMin7 = new interfaz.panels.VentaMin();
        ventaMin8 = new interfaz.panels.VentaMin();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaPop - Menú de desarrolador\n");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        banner.setBackground(new java.awt.Color(51, 153, 255));
        banner.setForeground(new java.awt.Color(0, 0, 51));
        banner.setPreferredSize(new java.awt.Dimension(945, 79));

        Logo.setFont(new java.awt.Font("OCR A Extended", 0, 36)); // NOI18N
        Logo.setForeground(new java.awt.Color(0, 0, 51));
        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setIcon(new ImageIcon(".\\resources\\logo\\IconoJavaPop3.png"));
        Logo.setText("JavaPop");
        Logo.setPreferredSize(new java.awt.Dimension(230, 38));

        Buscar.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        Buscar.setText("Buscar:");

        claveBusqueda.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N

        categoriaBannerLabel.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        categoriaBannerLabel.setText("Categoria:");

        comboBoxCategoria.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        comboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moda y acesorios", "Tv, audio y foto", "Moviles y telefónica", "Informática y electrónica", "Consolas y videojuegos", "Deporte y ocio" }));

        busquedaButton.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        busquedaButton.setText("Buscar");
        busquedaButton.setPreferredSize(new java.awt.Dimension(130, 23));
        busquedaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaButtonActionPerformed(evt);
            }
        });

        Funcion.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        Funcion.setText("Función:");

        comboBoxFuncion.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        comboBoxFuncion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consultar usuario", "Consultar producto", "Consultar ventas" }));
        comboBoxFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFuncionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bannerLayout = new javax.swing.GroupLayout(banner);
        banner.setLayout(bannerLayout);
        bannerLayout.setHorizontalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannerLayout.createSequentialGroup()
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Buscar)
                    .addComponent(categoriaBannerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bannerLayout.createSequentialGroup()
                        .addComponent(comboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busquedaButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(claveBusqueda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Funcion)
                    .addComponent(comboBoxFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        bannerLayout.setVerticalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Logo, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
            .addGroup(bannerLayout.createSequentialGroup()
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bannerLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(claveBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bannerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Funcion)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoriaBannerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(busquedaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboBoxFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout panelUsuariosLayout = new javax.swing.GroupLayout(panelUsuarios);
        panelUsuarios.setLayout(panelUsuariosLayout);
        panelUsuariosLayout.setHorizontalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsuariosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(usuarioMin1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(usuarioMin2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usuarioMin3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usuarioMin4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usuarioMin6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usuarioMin7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usuarioMin8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usuarioMin5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelUsuariosLayout.setVerticalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addComponent(usuarioMin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(usuarioMin8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 50, Short.MAX_VALUE))
        );

        jPanel1.add(panelUsuarios, "cardUsuarios");

        panelProductos.setLayout(null);

        productoMin1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin1MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin1);
        productoMin1.setBounds(30, 10, 204, 270);

        productoMin2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin2MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin2);
        productoMin2.setBounds(240, 10, 204, 270);

        productoMin3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin3MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin3);
        productoMin3.setBounds(450, 10, 204, 270);

        productoMin4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin4MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin4);
        productoMin4.setBounds(660, 10, 204, 270);

        productoMin5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin5MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin5);
        productoMin5.setBounds(30, 280, 204, 270);

        productoMin6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin6MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin6);
        productoMin6.setBounds(240, 280, 204, 270);

        productoMin7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin7MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin7);
        productoMin7.setBounds(450, 280, 204, 270);

        productoMin8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productoMin8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productoMin8MouseClicked(evt);
            }
        });
        panelProductos.add(productoMin8);
        productoMin8.setBounds(660, 280, 204, 270);

        rePag.setText("<<");
        rePag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rePagActionPerformed(evt);
            }
        });
        panelProductos.add(rePag);
        rePag.setBounds(610, 560, 50, 23);

        etiquetaPagina.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        etiquetaPagina.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaPagina.setText("Página 0 de 100");
        panelProductos.add(etiquetaPagina);
        etiquetaPagina.setBounds(660, 560, 150, 20);

        avPag.setText(">>");
        avPag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avPagActionPerformed(evt);
            }
        });
        panelProductos.add(avPag);
        avPag.setBounds(810, 560, 50, 23);

        jPanel1.add(panelProductos, "cardProductos");

        javax.swing.GroupLayout panelVentasLayout = new javax.swing.GroupLayout(panelVentas);
        panelVentas.setLayout(panelVentasLayout);
        panelVentasLayout.setHorizontalGroup(
            panelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ventaMin1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addComponent(ventaMin2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ventaMin3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ventaMin4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ventaMin5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ventaMin6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ventaMin7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ventaMin8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelVentasLayout.setVerticalGroup(
            panelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentasLayout.createSequentialGroup()
                .addComponent(ventaMin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ventaMin8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(panelVentas, "cardVentas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(banner, javax.swing.GroupLayout.DEFAULT_SIZE, 1032, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(banner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(filler3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filler5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void busquedaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaButtonActionPerformed
        
    }//GEN-LAST:event_busquedaButtonActionPerformed

    private void comboBoxFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFuncionActionPerformed
        int panel = comboBoxFuncion.getSelectedIndex();
        if (panel == 0) {
            camposCL.show(jPanel1, "cardUsuarios");
            displayUsuarios();
            
        } else if (panel == 1) {
            camposCL.show(jPanel1, "cardProductos");
            displayProductos();
            
        } else if (panel == 2) {
            camposCL.show(jPanel1, "cardVentas");
            displayVentas();
        }
    }//GEN-LAST:event_comboBoxFuncionActionPerformed
    
    public Icon icono(String path, int width, int heigth) {
        Icon img = new ImageIcon(new ImageIcon(getClass().getResource(path)).getImage().getScaledInstance(width, heigth, java.awt.Image.SCALE_DEFAULT));
        return img;
    }

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        IOCustomLib.guardarClientes(usuarios);
        IOCustomLib.guardarProductos(productos);
        IOCustomLib.guardarVentas(ventas);
    }//GEN-LAST:event_formWindowClosed

    private void productoMin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin1MouseClicked
        new MenuAdminProducto(this, productoMin1);
    }//GEN-LAST:event_productoMin1MouseClicked
    private void productoMin2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin2MouseClicked
        new MenuAdminProducto(this, productoMin2);
    }//GEN-LAST:event_productoMin2MouseClicked
    private void productoMin3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin3MouseClicked
        new MenuAdminProducto(this, productoMin3);
    }//GEN-LAST:event_productoMin3MouseClicked
    private void productoMin4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin4MouseClicked
        new MenuAdminProducto(this, productoMin4);
    }//GEN-LAST:event_productoMin4MouseClicked
    private void productoMin5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin5MouseClicked
        new MenuAdminProducto(this, productoMin5);
    }//GEN-LAST:event_productoMin5MouseClicked
    private void productoMin6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin6MouseClicked
        new MenuAdminProducto(this, productoMin6);
    }//GEN-LAST:event_productoMin6MouseClicked
    private void productoMin7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin7MouseClicked
        new MenuAdminProducto(this, productoMin7);
    }//GEN-LAST:event_productoMin7MouseClicked
    private void productoMin8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productoMin8MouseClicked
        new MenuAdminProducto(this, productoMin8);
    }//GEN-LAST:event_productoMin8MouseClicked
    private void rePagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rePagActionPerformed
        // Hacemos los displays de los productos invisibles
        productoMin1.setVisible(false);
        productoMin2.setVisible(false);
        productoMin3.setVisible(false);
        productoMin4.setVisible(false);
        productoMin5.setVisible(false);
        productoMin6.setVisible(false);
        productoMin7.setVisible(false);
        productoMin8.setVisible(false);

        // Disminuimos la posicion mínima
        posicionMin -= 8;

        // Actualiza la posición máxima y muestra los productos
        displayProductos();

        // Activa o desactiva los botones para cambiar páginas de productos, según sea necesario
        lockUnlockBotonesProductos();

        // Cambia el texto de la etiqueta que indica en que página estamos
        etiquetaPagina.setText("Página " + (posicionMin / 8 + 1) + " de " + (productos.size() / 8 + 1));
    }//GEN-LAST:event_rePagActionPerformed
    private void avPagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avPagActionPerformed
        // Hacemos los displays de los productos invisibles
        productoMin1.setVisible(false);
        productoMin2.setVisible(false);
        productoMin3.setVisible(false);
        productoMin4.setVisible(false);
        productoMin5.setVisible(false);
        productoMin6.setVisible(false);
        productoMin7.setVisible(false);
        productoMin8.setVisible(false);

        // Aumentamos la posicion mínima
        posicionMin += 8;

        // Actualiza la posición máxima y muestra los productos
        displayProductos();

        // Activa o desactiva los botones para cambiar páginas de productos, según sea necesario
        lockUnlockBotonesProductos();

        // Cambia el texto de la etiqueta que indica en que página estamos
        etiquetaPagina.setText("Página " + (posicionMin / 8 + 1) + " de " + (productos.size() / 8 + 1));
    }//GEN-LAST:event_avPagActionPerformed

    public void displayProductos() {
        // escondemos todos los productos
        productoMin1.setVisible(false);
        productoMin2.setVisible(false);
        productoMin3.setVisible(false);
        productoMin4.setVisible(false);
        productoMin5.setVisible(false);
        productoMin6.setVisible(false);
        productoMin7.setVisible(false);
        productoMin8.setVisible(false);
        
        // actualizamos posicionMax
        for (int i = posicionMin; i <= posicionMin + 8; i++) {
            posicionMax = i;
            if (posicionMax < productos.size()) {
                //System.out.println((i) + ".- " + prodDefinitivo.get(posicionMax).getTitulo());
            } else {
                posicionMax--;
                break;
            }
        }

        // mostramos los productos corresponcientes
        switch (posicionMax + 1 - posicionMin) {
            case 8: // Hay que mostrar 8 productos
                productoMin8.setVisible(true);
                productoMin8.setProducto(productos.get(posicionMin + 7));
            case 7: // Hay que mostrar 7 productos
                productoMin7.setVisible(true);
                productoMin7.setProducto(productos.get(posicionMin + 6));
            case 6: // Hay que mostrar 6 productos
                productoMin6.setVisible(true);
                productoMin6.setProducto(productos.get(posicionMin + 5));
            case 5: // Hay que mostrar 5 productos
                productoMin5.setVisible(true);
                productoMin5.setProducto(productos.get(posicionMin + 4));
            case 4: // Hay que mostrar 4 productos
                productoMin4.setVisible(true);
                productoMin4.setProducto(productos.get(posicionMin + 3));
            case 3: // Hay que mostrar 3 productos
                productoMin3.setVisible(true);
                productoMin3.setProducto(productos.get(posicionMin + 2));
            case 2: // Hay que mostrar 2 productos
                productoMin2.setVisible(true);
                productoMin2.setProducto(productos.get(posicionMin + 1));
            case 1: // Hay que mostrar 1 productos
                productoMin1.setVisible(true);
                productoMin1.setProducto(productos.get(posicionMin));
                //icon.setIcon(new ImageIcon(""));
                //errorLabel1.setText("");
                //errorLabel2.setText("");
                break;
            case 0: // Hay que mostrar 0 productos
                //Random rnd = new Random();
                //icon.setIcon(new ImageIcon(".\\resources\\logo\\notFound" + rnd.nextInt(5) + ".gif"));
                //errorLabel1.setText("¡Vaya!");
                //errorLabel2.setText("Parece que no se ha encontrado ningún producto");
                break;
        }
    }
    
    public void lockUnlockBotonesProductos() {
        if (posicionMin - 10 < 0) {
            rePag.setEnabled(false);
        } else {
            rePag.setEnabled(true);
        }

        if (posicionMin + 10 >= prodDefinitivo.size()) {
            avPag.setEnabled(false);
        } else {
            avPag.setEnabled(true);
        }
    } // Hay que cambiarlo

    private void displayVentas() {
        // escondemos todas las ventas
        ventaMin1.setVisible(false);
        ventaMin2.setVisible(false);
        ventaMin3.setVisible(false);
        ventaMin4.setVisible(false);
        ventaMin5.setVisible(false);
        ventaMin6.setVisible(false);
        ventaMin7.setVisible(false);
        ventaMin8.setVisible(false);
        
        // actualizamos posicionMax
        for (int i = posicionMin; i < posicionMin + 8; i++) {
            posicionMax = i;
            if (posicionMax < ventas.size()) {
            } else {
                posicionMax--;
                break;
            }
        }
        
        // mostramos las ventas corresponcientes
        switch (posicionMax + 1 - posicionMin) {
            case 8: // Hay que mostrar 8 ventas
                ventaMin8.setVisible(true);
                ventaMin8.setVenta(ventas.get(posicionMin + 7));
            case 7: // Hay que mostrar 7 ventas
                ventaMin7.setVisible(true);
                ventaMin7.setVenta(ventas.get(posicionMin + 6));
            case 6: // Hay que mostrar 6 ventas
                ventaMin6.setVisible(true);
                ventaMin6.setVenta(ventas.get(posicionMin + 5));
            case 5: // Hay que mostrar 5 ventas
                ventaMin5.setVisible(true);
                ventaMin5.setVenta(ventas.get(posicionMin + 4));
            case 4: // Hay que mostrar 4 ventas
                ventaMin4.setVisible(true);
                ventaMin4.setVenta(ventas.get(posicionMin + 3));
            case 3: // Hay que mostrar 3 ventas
                ventaMin3.setVisible(true);
                ventaMin3.setVenta(ventas.get(posicionMin + 2));
            case 2: // Hay que mostrar 2 ventas
                ventaMin2.setVisible(true);
                ventaMin2.setVenta(ventas.get(posicionMin + 1));
            case 1: // Hay que mostrar 1 ventas
                ventaMin1.setVisible(true);
                ventaMin1.setVenta(ventas.get(posicionMin));
                //icon.setIcon(new ImageIcon(""));
                //errorLabel1.setText("");
                //errorLabel2.setText("");
                break;
            case 0: // Hay que mostrar 0 ventas
                //Random rnd = new Random();
                //icon.setIcon(new ImageIcon(".\\resources\\logo\\notFound" + rnd.nextInt(5) + ".gif"));
                //errorLabel1.setText("¡Vaya!");
                //errorLabel2.setText("Parece que no se ha encontrado ningún producto");
                break;
        }
    }
    
    private void lockUnlockBotonesVentas() {
        if (posicionMin - 10 < 0) {
            rePag.setEnabled(false);
        } else {
            rePag.setEnabled(true);
        }

        if (posicionMin + 10 >= prodDefinitivo.size()) {
            avPag.setEnabled(false);
        } else {
            avPag.setEnabled(true);
        }
    } // Hay que cambiarlo

    public void displayUsuarios() {
        // escondemos todos los usuarios
        usuarioMin1.setVisible(false);
        usuarioMin2.setVisible(false);
        usuarioMin3.setVisible(false);
        usuarioMin4.setVisible(false);
        usuarioMin5.setVisible(false);
        usuarioMin6.setVisible(false);
        usuarioMin7.setVisible(false);
        usuarioMin8.setVisible(false);
        
        for (int i = posicionMin; i < posicionMin + 8; i++) {
            posicionMax = i;
            if (posicionMax < usuarios.size()) {
            } else {
                posicionMax--;
                break;
            }
        }

        // mostramos los usuarios corresponcientes
        switch (posicionMax + 1 - posicionMin) {
            case 8: // Hay que mostrar 8 usuarios
                usuarioMin8.setVisible(true);
                usuarioMin8.setCliente(usuarios.get(posicionMin + 7));
            case 7: // Hay que mostrar 7 usuarios
                usuarioMin7.setVisible(true);
                usuarioMin7.setCliente(usuarios.get(posicionMin + 6));
            case 6: // Hay que mostrar 6 usuarios
                usuarioMin6.setVisible(true);
                usuarioMin6.setCliente(usuarios.get(posicionMin + 5));
            case 5: // Hay que mostrar 5 usuarios
                usuarioMin5.setVisible(true);
                usuarioMin5.setCliente(usuarios.get(posicionMin + 4));
            case 4: // Hay que mostrar 4 usuarios
                usuarioMin4.setVisible(true);
                usuarioMin4.setCliente(usuarios.get(posicionMin + 3));
            case 3: // Hay que mostrar 3 usuarios
                usuarioMin3.setVisible(true);
                usuarioMin3.setCliente(usuarios.get(posicionMin + 2));
            case 2: // Hay que mostrar 2 usuarios
                usuarioMin2.setVisible(true);
                usuarioMin2.setCliente(usuarios.get(posicionMin + 1));
            case 1: // Hay que mostrar 1 usuarios
                usuarioMin1.setVisible(true);
                usuarioMin1.setCliente(usuarios.get(posicionMin));
                //icon.setIcon(new ImageIcon(""));
                //errorLabel1.setText("");
                //errorLabel2.setText("");
                break;
            case 0: // Hay que mostrar 0 usuarios
                //Random rnd = new Random();
                //icon.setIcon(new ImageIcon(".\\resources\\logo\\notFound" + rnd.nextInt(5) + ".gif"));
                //errorLabel1.setText("¡Vaya!");
                //errorLabel2.setText("Parece que no se ha encontrado ningún producto");
                break;
        }
    }
    
    public void lockUnlockBotonesUsuarios() {
        if (posicionMin - 8 < 0) {
            rePag.setEnabled(false);
        } else {
            rePag.setEnabled(true);
        }

        if (posicionMin + 8 >= clientDefinitivo.size()) {
            avPag.setEnabled(false);
        } else {
            avPag.setEnabled(true);
        }
    } // Hay que cambiarlo

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Buscar;
    private javax.swing.JLabel Funcion;
    private javax.swing.JLabel Logo;
    private javax.swing.JButton avPag;
    private javax.swing.JPanel banner;
    private javax.swing.JButton busquedaButton;
    private javax.swing.JLabel categoriaBannerLabel;
    private javax.swing.JTextField claveBusqueda;
    private javax.swing.JComboBox<String> comboBoxCategoria;
    private javax.swing.JComboBox<String> comboBoxFuncion;
    private javax.swing.JLabel etiquetaPagina;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelProductos;
    private javax.swing.JPanel panelUsuarios;
    private javax.swing.JPanel panelVentas;
    public interfaz.panels.ProductoMin productoMin1;
    public interfaz.panels.ProductoMin productoMin2;
    public interfaz.panels.ProductoMin productoMin3;
    public interfaz.panels.ProductoMin productoMin4;
    public interfaz.panels.ProductoMin productoMin5;
    public interfaz.panels.ProductoMin productoMin6;
    public interfaz.panels.ProductoMin productoMin7;
    public interfaz.panels.ProductoMin productoMin8;
    private javax.swing.JButton rePag;
    private interfaz.panels.UsuarioMin usuarioMin1;
    private interfaz.panels.UsuarioMin usuarioMin2;
    private interfaz.panels.UsuarioMin usuarioMin3;
    private interfaz.panels.UsuarioMin usuarioMin4;
    private interfaz.panels.UsuarioMin usuarioMin5;
    private interfaz.panels.UsuarioMin usuarioMin6;
    private interfaz.panels.UsuarioMin usuarioMin7;
    private interfaz.panels.UsuarioMin usuarioMin8;
    private interfaz.panels.VentaMin ventaMin1;
    private interfaz.panels.VentaMin ventaMin2;
    private interfaz.panels.VentaMin ventaMin3;
    private interfaz.panels.VentaMin ventaMin4;
    private interfaz.panels.VentaMin ventaMin5;
    private interfaz.panels.VentaMin ventaMin6;
    private interfaz.panels.VentaMin ventaMin7;
    private interfaz.panels.VentaMin ventaMin8;
    // End of variables declaration//GEN-END:variables
}
