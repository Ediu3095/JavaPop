/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Admin;
import clases.Cliente;
import static clases.utils.Colecciones.usuarios;
import clases.utils.ConsoleIO.*;
import clases.utils.IOCustomLib.*;
import java.util.*;
import java.awt.CardLayout;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author TheElctrMsc_Gaming
 */
public class LogReg extends javax.swing.JFrame {

    private CardLayout itemCL;

    /**
     * Creates new form LogReg
     */
    public LogReg() {
        initComponents();
        ImageIcon img = new ImageIcon(".\\resources\\logo\\IconoJavaPop2.png");
        super.setIconImage(img.getImage());
        itemCL = (CardLayout) itemsPanel.getLayout();
        super.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        itemsPanel = new javax.swing.JPanel();
        loginCard = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 10), new java.awt.Dimension(10, 10), new java.awt.Dimension(10, 10));
        loginFields = new interfaz.loginFields();
        registerCard = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        registerFields = new interfaz.registerFields();
        buttonPanel = new javax.swing.JPanel();
        loginMenuButton = new javax.swing.JButton();
        registerMenuButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaPop - Inicio de sesión");
        setBackground(new java.awt.Color(0, 0, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(0, 0, 51));

        itemsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        itemsPanel.setLayout(new java.awt.CardLayout());

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Iniciar Sesión");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginCardLayout = new javax.swing.GroupLayout(loginCard);
        loginCard.setLayout(loginCardLayout);
        loginCardLayout.setHorizontalGroup(
            loginCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filler2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
            .addGroup(loginCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        loginCardLayout.setVerticalGroup(
            loginCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginCardLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(loginFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        itemsPanel.add(loginCard, "login");

        jButton2.setText("Registrarse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerCardLayout = new javax.swing.GroupLayout(registerCard);
        registerCard.setLayout(registerCardLayout);
        registerCardLayout.setHorizontalGroup(
            registerCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registerCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registerFields, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        registerCardLayout.setVerticalGroup(
            registerCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registerFields, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        itemsPanel.add(registerCard, "register");

        buttonPanel.setBackground(new java.awt.Color(0, 0, 51));

        loginMenuButton.setText("Iniciar Sesión");
        loginMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuButtonActionPerformed(evt);
            }
        });

        registerMenuButton.setText("Registrarse");
        registerMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMenuButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Salir");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginMenuButton)
                .addGap(18, 18, 18)
                .addComponent(registerMenuButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(95, 95, 95))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuButtonActionPerformed
        // TODO add your handling code here:
        itemCL.show(itemsPanel, "login");
    }//GEN-LAST:event_loginMenuButtonActionPerformed

    private void registerMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMenuButtonActionPerformed
        // TODO add your handling code here:
        itemCL.show(itemsPanel, "register");
    }//GEN-LAST:event_registerMenuButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loginFields.emailErrorLabel.setText("");
        loginFields.passwordErrorLabel.setText("");
        boolean validUser = true;

        // Recoje los credenciales del usuario
        String correo = loginFields.getEmailField1().getText();
        String clave = new String(loginFields.getPasswordField1().getPassword());

        // Comprobamos si el correo es válido
        if (checkCorreo(correo)) {

            // Si la contraseña es valida
            if (checkClave(clave)) {
                if (correo.equals("admin@javapop.com") && clave.equals("admin")) {
                    // Abrir menu admin
                    new MenuAdmin();
                    this.dispose();
                } else {
                    validUser = false;
                    // Se comprueba que exista algún usuario con ese correo y contraseña
                    for (int i = 0; i < usuarios.size(); i++) {
                        if (usuarios.get(i).correo.equals(correo)) {
                            if (usuarios.get(i).clave.equals(clave)) {
                                // vv Abrir menu usuario con ese user vv
                                new MenuPrincipal(usuarios.get(i));
                                validUser = true;
                                this.dispose();
                                break;
                            }
                        }
                    }
                }
            } else {// Si la contraseña y el correo no coinciden con los de ningun usuario
                // JOptionPane.showMessageDialog(this, "Los datos introducidos son incorrectos", "Credenciales no válidos", JOptionPane.INFORMATION_MESSAGE);
                loginFields.passwordErrorLabel.setText("Contraseña inválida");
            }
        } else {
            // JOptionPane.showMessageDialog(this, "El correo no es válido", "Credenciales no válidos", JOptionPane.INFORMATION_MESSAGE);
            loginFields.emailErrorLabel.setText("Correo inválido");
        }

        if (!validUser) {
            JOptionPane.showMessageDialog(this, "No existe un usuario con el correo indicado, o la contraseña es incorrecta.\nPor favor revise los credenciales e intentelo de nuevo.", "Credenciales no válidos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        registerFields.emailErrorLabel.setText("");
        registerFields.passwordErrorLabel.setText("");
        registerFields.nameErrorLabel.setText("");
        registerFields.ppccErrorLabel.setText("");
        registerFields.ccErrorLabel.setText("");
        registerFields.dniErrorLabel.setText("");
        boolean validUser = true;

        //Recoje los creedenciales del usuario
        String correo = registerFields.getEmailField().getText();
        String clave = registerFields.getPasswordField().getText();
        String name = registerFields.getNameField().getText();
        int ccpp = Integer.parseInt(registerFields.getPpccField().getText());
        String ttcc = registerFields.getCcField().getText();
        String dni = registerFields.getIdField().getText();

        //Comprobamos que el correo sea válido
        if (checkCorreo(correo)) {
            for (int i = 0; i < usuarios.size(); i++) {
                if (usuarios.get(i).correo.equals(correo)) {
                    registerFields.emailErrorLabel.setText("Correo inválido o en uso");
                } else {
                    if (!checkClave(clave)) {
                        registerFields.passwordErrorLabel.setText("Contraseña no válida");
                    } else {
                        if (!checkCodigoPostal(ccpp)) {
                            registerFields.ppccErrorLabel.setText("Codigo postal no válido");
                        } else {
                            if (!checkTarjetaCredito(ttcc)) {
                                registerFields.ccErrorLabel.setText("Tarjeta de credito no válida");
                            } else {
                                if (!checkDni(dni)) {
                                    registerFields.dniErrorLabel.setText("DNI no válido");
                                } else {
                                    Cliente c1 = new Cliente(correo, clave, name, dni, ccpp, ttcc);
                                    usuarios.add(c1);
                                    // vv Abrir menu usuario con ese user vv
                                    new MenuPrincipal(usuarios.get(i));
                                    validUser = true;
                                    this.dispose();
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        } else {
            registerFields.emailErrorLabel.setText("Correo inválido o en uso");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton exitButton;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel itemsPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel loginCard;
    private interfaz.loginFields loginFields;
    private javax.swing.JButton loginMenuButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel registerCard;
    private interfaz.registerFields registerFields;
    private javax.swing.JButton registerMenuButton;
    // End of variables declaration//GEN-END:variables

    private boolean checkCorreo(String correo) {
        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher_ = pattern.matcher(correo);
        return matcher_.matches();
    }

    private boolean checkClave(String clave) {
        Pattern pattern = Pattern.compile("[A-Za-z0-9]{1,}");
        Matcher matcher = pattern.matcher(clave);
        return matcher.matches();
    }

    public boolean checkDni(String str_) {
        char[] upper = "TRWAGMYFPDXBNJZSQVHLCKE".toCharArray();
        Pattern pattern = Pattern.compile("[0-9]{7,8}[A-Z]");
        Matcher matcher_;
        String DNI;
        int NIE;
        DNI = str_.toUpperCase();
        matcher_ = pattern.matcher(DNI);
        if (matcher_.matches()) {
            NIE = Integer.parseInt(DNI.substring(0, DNI.length() - 1));
            if (DNI.charAt(DNI.length() - 1) == upper[NIE % 23]) {
                DNI = DNI.toUpperCase();
                return true;
            }
        }
        return false;
    }

    public boolean checkCodigoPostal(int entero) {
        String str_ = String.valueOf(entero);
        Pattern pattern = Pattern.compile("[0-9]{5}");
        Matcher matcher_;
        String ccpp;
        if (str_.length() < 5) {
            ccpp = str_;
            matcher_ = pattern.matcher(ccpp);
            if (matcher_.matches()) {
                return true;
            }
        }
        return false;
    }

    public boolean checkTarjetaCredito(String str_) {
        Pattern pattern = Pattern.compile("[0-9]{16}");
        Matcher matcher_;
        String ttcc;
        if (str_.length() < 16) {
            ttcc = str_;
            matcher_ = pattern.matcher(ttcc);
            if (matcher_.matches()) {
                return true;
            }
        }
        return false;
    }
}
